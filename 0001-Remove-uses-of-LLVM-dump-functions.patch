diff -ru ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/Makefile ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/Makefile
--- ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/Makefile	2019-03-05 12:57:05.000000000 -0800
+++ ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/Makefile	2019-03-07 00:15:46.114498397 -0800
@@ -175,11 +175,11 @@
 	$(LLVM_VERSION_DEF) \
 	-Wall \
 	-DBUILD_DATE="\"$(BUILD_DATE)\"" -DBUILD_VERSION="\"$(BUILD_VERSION)\"" \
-	-Wno-sign-compare -Wno-unused-function $(WERROR)
+	-Wno-sign-compare -Wno-unused-function
 
 # if( !($(LLVM_VERSION) == LLVM_3_2 || $(LLVM_VERSION) == LLVM_3_3 || $(LLVM_VERSION) == LLVM_3_4))
 ifeq (,$(filter $(LLVM_VERSION), LLVM_3_2 LLVM_3_3 LLVM_3_4))
-	CXXFLAGS+=-std=c++11 -Wno-c99-extensions -Wno-deprecated-register -fno-rtti
+	CXXFLAGS+=-std=c++14 -fno-rtti
 endif
 ifneq ($(ARM_ENABLED), 0)
     CXXFLAGS+=-DISPC_ARM_ENABLED
@@ -240,7 +240,7 @@
 
 depend: llvm_check $(CXX_SRC) $(HEADERS)
 	@echo Updating dependencies
-	@$(CXX) -MM $(CXXFLAGS) $(CXX_SRC) | sed 's_^\([a-z]\)_objs/\1_g' > depend
+	$(CXX) -MM $(CXXFLAGS) $(CXX_SRC) | sed 's_^\([a-z]\)_objs/\1_g' > depend
 
 -include depend
 
@@ -273,7 +273,7 @@
 
 ispc: print_deprecation_msg print_llvm_src dirs $(OBJS)
 	@echo Creating ispc executable
-	@$(CXX) $(OPT) $(LDFLAGS) -o $@ $(OBJS) $(ISPC_LIBS)
+	$(CXX) $(OPT) $(LDFLAGS) -o $@ $(OBJS) $(ISPC_LIBS)
 
 # Use clang as a default compiler, instead of gcc
 # This is default now.
@@ -295,35 +295,35 @@
 
 objs/%.o: ${SRC_DIR}/%.cpp
 	@echo Compiling $<
-	@$(CXX) $(CXXFLAGS) -o $@ -c $<
+	$(CXX) $(CXXFLAGS) -o $@ -c $<
 
 objs/cbackend.o: ${SRC_DIR}/cbackend.cpp
 	@echo Compiling $<
-	@$(CXX) -fno-rtti -fno-exceptions $(CXXFLAGS) -o $@ -c $<
+	$(CXX) -fno-rtti -fno-exceptions $(CXXFLAGS) -o $@ -c $<
 
 objs/opt.o: ${SRC_DIR}/opt.cpp
 	@echo Compiling $<
-	@$(CXX) -fno-rtti $(CXXFLAGS) -o $@ -c $<
+	$(CXX) -fno-rtti $(CXXFLAGS) -o $@ -c $<
 
 objs/%.o: objs/%.cpp
 	@echo Compiling $<
-	@$(CXX) $(CXXFLAGS) -o $@ -c $<
+	$(CXX) $(CXXFLAGS) -o $@ -c $<
 
 objs/parse.cc: $(SRC_DIR)/parse.yy
 	@echo Running bison on $<
-	@$(YACC) -o $@ $<
+	$(YACC) -o $@ $<
 
 objs/parse.o: objs/parse.cc $(HEADERS)
 	@echo Compiling $<
-	@$(CXX) $(CXXFLAGS) -o $@ -c $<
+	$(CXX) $(CXXFLAGS) -o $@ -c $<
 
 objs/lex.cpp: $(SRC_DIR)/lex.ll
 	@echo Running flex on $<
-	@$(LEX) -o $@ $<
+	$(LEX) -o $@ $<
 
 objs/lex.o: objs/lex.cpp $(HEADERS) objs/parse.cc
 	@echo Compiling $<
-	@$(CXX) $(CXXFLAGS) -o $@ -c $<
+	$(CXX) $(CXXFLAGS) -o $@ -c $<
 
 objs/builtins-dispatch.cpp: builtins/dispatch.ll builtins/util.m4 builtins/util-nvptx.m4 builtins/svml.m4 $(wildcard builtins/*common.ll)
 	@echo Creating C++ source from builtins definition file $<
diff -ru ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/src/llvmutil.cpp ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/src/llvmutil.cpp
--- /ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/src/llvmutil.cpp	2019-03-05 12:57:05.000000000 -0800
+++ ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/src/llvmutil.cpp	2019-03-07 00:20:05.751941837 -0800
@@ -45,6 +45,7 @@
 #include <llvm/IR/BasicBlock.h>
 #include <llvm/IR/Instructions.h>
 #endif
+#include <llvm/Support/raw_os_ostream.h>
 #include <map>
 #include <set>
 
@@ -1344,7 +1345,7 @@
         return;
 
     fprintf(stderr, "  ");
-    v->dump();
+    v->print(llvm::errs());
     done.insert(v);
 
     if (inst == NULL)
diff -ru ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/src/opt.cpp ispc-34da2d2/ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/src/opt.cpp
--- ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec.origin/src/opt.cpp	2019-03-05 12:57:05.000000000 -0800
+++ ispc-34da2d23bbf32abf44da11d2cdca595dc7318cec/src/opt.cpp	2019-03-07 00:21:59.796331216 -0800
@@ -171,7 +171,7 @@
                                                              strlen(getenv("FUNC"))))) {                               \
         fprintf(stderr, "Start of " NAME "\n");                                                                        \
         fprintf(stderr, "---------------\n");                                                                          \
-        bb.dump();                                                                                                     \
+        bb.print(llvm::errs());                                                                                                     \
         fprintf(stderr, "---------------\n\n");                                                                        \
     } else /* eat semicolon */
 
@@ -180,7 +180,7 @@
                                                              strlen(getenv("FUNC"))))) {                               \
         fprintf(stderr, "End of " NAME " %s\n", modifiedAny ? "** CHANGES **" : "");                                   \
         fprintf(stderr, "---------------\n");                                                                          \
-        bb.dump();                                                                                                     \
+        bb.print(llvm::errs());                                                                                                     \
         fprintf(stderr, "---------------\n\n");                                                                        \
     } else /* eat semicolon */
 
@@ -493,7 +493,7 @@
 void Optimize(llvm::Module *module, int optLevel) {
     if (g->debugPrint) {
         printf("*** Code going into optimization ***\n");
-        module->dump();
+        module->print(llvm::errs());
     }
     DebugPassManager optPM;
     optPM.add(llvm::createVerifierPass(), 0);
@@ -878,7 +878,7 @@
 
     if (g->debugPrint) {
         printf("\n*****\nFINAL OUTPUT\n*****\n");
-        module->dump();
+        module->print(llvm::errs());
     }
 }
 
